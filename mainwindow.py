# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QTableWidget, QHeaderView, QTableWidgetItem
from transformers import pipeline


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        self.items = 0
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1354, 988)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("logo.PNG"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        
        self.table = QtWidgets.QTableWidget(self.centralwidget)
        self.table.setColumnCount(1)
        self.table.setHorizontalHeaderLabels([""])
        self.table.horizontalHeader().setSectionResizeMode(QHeaderView.Stretch)
        self.table.setGeometry(QtCore.QRect(10, 170, 1331, 761))

        self.partycombo = QtWidgets.QComboBox(self.centralwidget)
        self.partycombo.setGeometry(QtCore.QRect(270, 70, 201, 31))
        self.partycombo.setObjectName("partycombo")
        self.partycombo.addItem("")
        self.partycombo.addItem("")
        self.partycombo.addItem("")
        self.partycombo.addItem("")
        self.partycombo.addItem("")
        self.partycombo.addItem("")
        self.partycombo.addItem("")
        self.partylabel = QtWidgets.QLabel(self.centralwidget)
        self.partylabel.setGeometry(QtCore.QRect(340, 30, 100, 16))
        self.partylabel.setObjectName("partylabel")
        self.topiclabel = QtWidgets.QLabel(self.centralwidget)
        self.topiclabel.setGeometry(QtCore.QRect(640, 30, 71, 20))
        self.topiclabel.setToolTipDuration(5)
        self.topiclabel.setStatusTip("")
        self.topiclabel.setAccessibleDescription("")
        self.topiclabel.setObjectName("topiclabel")
        self.spinBox = QtWidgets.QSpinBox(self.centralwidget)
        self.spinBox.setGeometry(QtCore.QRect(950, 70, 42, 31))
        self.spinBox.setMinimum(10)
        self.spinBox.setMaximum(500)
        self.spinBox.setObjectName("spinBox")
        self.notweetslabel = QtWidgets.QLabel(self.centralwidget)
        self.notweetslabel.setGeometry(QtCore.QRect(910, 30, 111, 20))
        self.notweetslabel.setObjectName("notweetslabel")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(600, 130, 151, 28))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.get_data)

        self.awhilelabel = QtWidgets.QLabel(self.centralwidget)
        self.awhilelabel.setGeometry(QtCore.QRect(770, 130, 400, 28))
        self.awhilelabel.setObjectName("awhilelabel")


        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(70, 110, 1201, 20))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.topictext = QtWidgets.QTextEdit(self.centralwidget)
        self.topictext.setGeometry(QtCore.QRect(560, 70, 221, 31))
        self.topictext.setObjectName("topictext")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1354, 26))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionSave_as_csv = QtWidgets.QAction(MainWindow)
        self.actionSave_as_csv.setObjectName("actionSave_as_csv")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionInfo = QtWidgets.QAction(MainWindow)
        self.actionInfo.setObjectName("actionInfo")
        self.menuFile.addAction(self.actionSave_as_csv)
        self.menuFile.addAction(self.actionInfo)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionExit)
        self.menubar.addAction(self.menuFile.menuAction())
        self.partylabel.setBuddy(self.partycombo)
        self.notweetslabel.setBuddy(self.spinBox)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "ML4B Tweet Generator (© Louis & Patrick)"))
        self.partycombo.setItemText(0, _translate("MainWindow", "AfD"))
        self.partycombo.setItemText(1, _translate("MainWindow", "Bündnis 90/Die Grünen"))
        self.partycombo.setItemText(2, _translate("MainWindow", "CDU"))
        self.partycombo.setItemText(3, _translate("MainWindow", "CSU"))
        self.partycombo.setItemText(4, _translate("MainWindow", "Die Linke"))
        self.partycombo.setItemText(5, _translate("MainWindow", "FDP"))
        self.partycombo.setItemText(6, _translate("MainWindow", "SPD"))
        self.partylabel.setText(_translate("MainWindow", "Select Party"))
        self.topiclabel.setText(_translate("MainWindow", "Enter Topic"))
        self.notweetslabel.setText(_translate("MainWindow", "Number of Tweets"))
        self.pushButton.setToolTip(
            _translate("MainWindow", "<html><head/><body><p>This may take a while...</p></body></html>"))
        self.pushButton.setText(_translate("MainWindow", "Generate Tweets"))
        self.awhilelabel.setText(_translate("MainWindow", "(Depending on the number of tweets, this may take a while...)"))

        self.topictext.setToolTip(_translate("MainWindow",
                                            "<html><head/><body><p>Enter topic in <span style=\" font-weight:600;\">german</span> language.</p></body></html>"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.actionSave_as_csv.setText(_translate("MainWindow", "Save as csv"))
        self.actionExit.setText(_translate("MainWindow", "E&xit"))
        self.actionInfo.setText(_translate("MainWindow", "Info"))

    def get_data(self):
        self.pushButton.setDisabled(True)
        party = self.partycombo.currentText()
        topic = self.topictext.toPlainText()
        numbertweets = self.spinBox.value()
        self.create_tweets(party, topic, numbertweets)


    def create_tweets(self, party, topic, numbertweets):
        pipe = pipeline('text-generation', model=f'./models/{party}_model',
                       tokenizer='anonymous-german-nlp/german-gpt2')
        tweet_list = []
        for i in range(numbertweets):
            tweet = pipe(topic)[0]['generated_text']
            tweet_list.append(tweet)

        self.fill_table(tweet_list)


    def fill_table(self, data):
        self.items = 0
        self.table.setRowCount(0)
        for tweet in data:
            tweetItem = QTableWidgetItem(tweet)
            self.table.insertRow(self.items)
            self.table.setItem(self.items, 0, tweetItem)
            self.items += 1
        self.pushButton.setDisabled(False)


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
